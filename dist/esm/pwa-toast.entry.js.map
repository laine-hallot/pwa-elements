{"file":"pwa-toast.entry.js","mappings":";;AAAA,MAAM,QAAQ,GAAG,8pBAA8pB;;MCOlqB,QAAQ;;;;oBAKQ,IAAI;mBAEZ,IAAI;;EAEvB,QAAQ;IACN,MAAM,OAAO,GAAG;MACd,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO;KACpB,CAAA;IAED,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,EAAE;MACzB,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;KAC/B;IACD,OAAO;MACL,KAAK,EAAE,OAAO;KACf,CAAA;GACF;EAED,gBAAgB;IACd,UAAU,CAAC;MACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACtB,CAAC,CAAC;IACH,UAAU,CAAC;MACT,IAAI,CAAC,KAAK,EAAE,CAAC;KACd,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAA;GAClB;EAED,KAAK;IACH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACpB,UAAU,CAAC;MACT,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACzC,EAAE,IAAI,CAAC,CAAC;GACV;EAED;IACE,QACE,WAAK,KAAK,EAAC,SAAS,IAClB,WAAK,KAAK,EAAC,OAAO,IACf,IAAI,CAAC,OAAO,CACT,CACF,EACN;GACH;;;;;;;;","names":[],"sources":["./src/components/toast/toast.css?tag=pwa-toast&encapsulation=shadow","./src/components/toast/toast.tsx"],"sourcesContent":[":host {\n  position: fixed;\n  bottom: 20px;\n  left: 0;\n  right: 0;\n  display: flex;\n\n  opacity: 0;\n}\n\n:host(.in) {\n  transition: opacity 300ms;\n  opacity: 1;\n}\n\n:host(.out) {\n  transition: opacity 1s;\n  opacity: 0;\n}\n\n.wrapper {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.toast {\n  font-family: -apple-system, system-ui, \"Helvetica Neue\", Roboto, sans-serif;\n  background-color: #eee;\n  color: black;\n  border-radius: 5px;\n  padding: 10px 15px;\n  font-size: 14px;\n  font-weight: 500;\n  box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.20);\n}","import { h, Component, Prop, Element, State } from '@stencil/core';\n\n@Component({\n  tag: 'pwa-toast',\n  styleUrl: 'toast.css',\n  shadow: true\n})\nexport class PWAToast {\n  @Element() el: HTMLElement;\n\n  @Prop() message: string;\n\n  @Prop() duration: number = 2000;\n\n  @State() closing = null;\n\n  hostData() {\n    const classes = {\n      out: !!this.closing\n    }\n\n    if (this.closing !== null) {\n      classes['in'] = !this.closing;\n    }\n    return {\n      class: classes\n    }\n  }\n\n  componentDidLoad() {\n    setTimeout(() => {\n      this.closing = false;\n    });\n    setTimeout(() => {\n      this.close();\n    }, this.duration)\n  }\n\n  close() {\n    this.closing = true;\n    setTimeout(() => {\n      this.el.parentNode.removeChild(this.el);\n    }, 1000);\n  }\n\n  render() {\n    return (\n      <div class=\"wrapper\">\n        <div class=\"toast\">\n          {this.message}\n        </div>\n      </div>\n    );\n  }\n}\n"],"version":3}