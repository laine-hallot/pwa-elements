{"version":3,"file":"camera-modal-instance.js","sourceRoot":"","sources":["../../../src/components/camera-modal/camera-modal-instance.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,CAAC,EAAE,KAAK,EAAgB,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAOzF,MAAM,OAAO,cAAc;;IAQzB,gBAAW,GAAG,KAAK,EAAE,KAAW,EAAE,EAAE;MAClC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC,CAAA;IAED,wBAAmB,GAAG,KAAK,EAAE,KAAU,EAAE,EAAE;MACzC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC,CAAA;sBAV4B,MAAM;yBACX,iBAAiB;+BACX,cAAc;;EAU5C,mBAAmB,CAAC,CAAa;IAC/B,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,EAAE,EAAE;MACxB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACzB;EACH,CAAC;EAED,oBAAoB,CAAC,CAAa;IAChC,CAAC,CAAC,eAAe,EAAE,CAAC;EACtB,CAAC;EAGD,mBAAmB,CAAC,CAAgB;IAClC,IAAI,CAAC,CAAC,GAAG,KAAK,QAAQ,EAAE;MACtB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACzB;EACH,CAAC;EAED,MAAM;IACJ,OAAO,CACL,WAAK,KAAK,EAAC,SAAS,EAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;MAC5D,WAAK,KAAK,EAAC,SAAS;QAClB,kBACE,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,EAC1C,UAAU,EAAE,IAAI,CAAC,UAAU,EAC3B,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,mBAAmB,EAAE,IAAI,CAAC,mBAAmB,EAC7C,mBAAmB,EAAE,IAAI,CAAC,mBAAmB,EAC7C,aAAa,EAAE,IAAI,CAAC,aAAa,GAAI,CACnC,CACF,CACP,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { h, Event, EventEmitter, Component, Listen, Element, Prop } from '@stencil/core';\n\n@Component({\n  tag: 'pwa-camera-modal-instance',\n  styleUrl: 'camera-modal-instance.css',\n  shadow: true\n})\nexport class PWACameraModal {\n  @Element() el;\n  @Event() onPhoto: EventEmitter;\n  @Event() noDeviceError: EventEmitter;\n  @Prop() facingMode: string = 'user';\n  @Prop() noDevicesText = 'No camera found';\n  @Prop() noDevicesButtonText = 'Choose image';\n\n  handlePhoto = async (photo: Blob) => {\n    this.onPhoto.emit(photo);\n  }\n\n  handleNoDeviceError = async (photo: any) => {\n    this.noDeviceError.emit(photo);\n  }\n\n  handleBackdropClick(e: MouseEvent) {\n    if (e.target !== this.el) {\n      this.onPhoto.emit(null);\n    }\n  }\n\n  handleComponentClick(e: MouseEvent) {\n    e.stopPropagation();\n  }\n\n  @Listen('keyup', { target: 'body' })\n  handleBackdropKeyUp(e: KeyboardEvent) {\n    if (e.key === \"Escape\") {\n      this.onPhoto.emit(null);\n    }\n  }\n\n  render() {\n    return (\n      <div class=\"wrapper\" onClick={e => this.handleBackdropClick(e)}>\n        <div class=\"content\">\n          <pwa-camera\n            onClick={e => this.handleComponentClick(e)}\n            facingMode={this.facingMode}\n            handlePhoto={this.handlePhoto}\n            handleNoDeviceError={this.handleNoDeviceError}\n            noDevicesButtonText={this.noDevicesButtonText}\n            noDevicesText={this.noDevicesText} />\n        </div>\n      </div>\n    );\n  }\n}\n"]}