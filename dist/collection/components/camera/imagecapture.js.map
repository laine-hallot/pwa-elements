{"version":3,"file":"imagecapture.js","sourceRoot":"","sources":["../../../src/components/camera/imagecapture.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;GAiBG;AAIH,MAAM,CAAC,IAAI,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;AAE9C,IAAI,OAAO,YAAY,KAAK,WAAW,EAAE;EACvC,YAAY,GAAG;IASb;;;;OAIG;IACH,YAAY,gBAAgB;MAC1B,IAAI,gBAAgB,CAAC,IAAI,KAAK,OAAO;QACnC,MAAM,IAAI,YAAY,CAAC,mBAAmB,CAAC,CAAC;MAE9C,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;MAC1C,IAAI,CAAC,CAAC,YAAY,IAAI,IAAI,CAAC,iBAAiB,CAAC,EAAE;QAC7C,uBAAuB;QACvB,IAAI,CAAC,iBAAiB,CAAC,UAAU,GAAG,MAAM,CAAC;OAC5C;MAED,gHAAgH;MAChH,IAAI,CAAC,cAAc,GAAG,IAAI,WAAW,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;MAC1D,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;MACpD,IAAI,CAAC,mBAAmB,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;QAC/C,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;MACzD,CAAC,CAAC,CAAC;MACH,IAAI,gBAAgB,EAAE;QACpB,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,CAAE,iEAAiE;OACtH;WAAM;QACL,IAAI,CAAC,YAAY,CAAC,GAAG,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;OAClE;MACD,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC;MAC/B,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC,CAAC,iEAAiE;MACpH,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;MAEzB,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;MACtD,oFAAoF;MACpF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC7D,CAAC;IAED;;;OAGG;IACH,IAAI,gBAAgB;MAClB,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAChC,CAAC;IAED;;;;;OAKG;IACH,oBAAoB;MAClB,OAAO,IAAI,OAAO,CAAC,SAAS,WAAW,CAAC,OAAO,EAAE,MAAM;QACrD,+DAA+D;QAC/D,MAAM,kBAAkB,GAAG;UACzB,OAAO,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;SAC3B,CAAC;QACF,OAAO,CAAC;UACN,oBAAoB,EAAE,kBAAkB;UACxC,YAAY,EAAE,MAAM;UACpB,aAAa,EAAE,CAAC,MAAM,CAAC;UACvB,SAAS,EAAE,MAAM;UACjB,WAAW,EAAE,kBAAkB;UAC/B,UAAU,EAAE,kBAAkB;UAC9B,GAAG,EAAE,kBAAkB;UACvB,eAAe,EAAE,KAAK;UACtB,gBAAgB,EAAE,MAAM;UACxB,IAAI,EAAE,kBAAkB;SACzB,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,YAAY,CAAC,gBAAgB,CAAC,CAAC,CAAC;MAC7C,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,UAAU,CAAC,cAAc,GAAG,EAAE;MAC5B,OAAO,IAAI,OAAO,CAAC,SAAS,UAAU,CAAC,QAAQ,EAAE,OAAO;QACtD,OAAO;MACT,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACH,SAAS;MACP,MAAM,IAAI,GAAG,IAAI,CAAC;MAClB,OAAO,IAAI,OAAO,CAAC,SAAS,UAAU,CAAC,OAAO,EAAE,MAAM;QACpD,sFAAsF;QACtF,wFAAwF;QACxF,IAAI,IAAI,CAAC,iBAAiB,CAAC,UAAU,KAAK,MAAM,EAAE;UAChD,OAAO,MAAM,CAAC,IAAI,YAAY,CAAC,mBAAmB,CAAC,CAAC,CAAC;SACtD;QACD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,EAAE;UACjC,IAAI;YACF,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;YACxD,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;YAC1D,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACxD,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;WACpC;UAAC,OAAO,KAAK,EAAE;YACd,MAAM,CAAC,IAAI,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC;WAC1C;QACH,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACH,SAAS;MACP,MAAM,IAAI,GAAG,IAAI,CAAC;MAClB,OAAO,IAAI,OAAO,CAAC,SAAS,UAAU,CAAC,OAAO,EAAE,MAAM;QACpD,sFAAsF;QACtF,wFAAwF;QACxF,IAAI,IAAI,CAAC,iBAAiB,CAAC,UAAU,KAAK,MAAM,EAAE;UAChD,OAAO,MAAM,CAAC,IAAI,YAAY,CAAC,mBAAmB,CAAC,CAAC,CAAC;SACtD;QACD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,EAAE;UACjC,IAAI;YACF,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;YACxD,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;YAC1D,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACxD,+GAA+G;YAC/G,OAAO,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;WACvD;UAAC,OAAO,KAAK,EAAE;YACd,MAAM,CAAC,IAAI,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC;WAC1C;QACH,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,CAAC;IACL,CAAC;GACF,CAAC;CACH;AAED,MAAM,CAAC,YAAY,GAAG,YAAY,CAAC","sourcesContent":["/**\n * MediaStream ImageCapture polyfill\n *\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndeclare var window;\n\nexport let ImageCapture = window.ImageCapture;\n\nif (typeof ImageCapture === 'undefined') {\n  ImageCapture = class {\n    _videoStreamTrack: any;\n    videoElement: any;\n    _previewStream: any;\n    videoElementPlaying: any;\n    canvasElement: any;\n    canvas2dContext: any;\n\n\n    /**\n     * TODO https://www.w3.org/TR/image-capture/#constructors\n     *\n     * @param {MediaStreamTrack} videoStreamTrack - A MediaStreamTrack of the 'video' kind\n     */\n    constructor(videoStreamTrack) {\n      if (videoStreamTrack.kind !== 'video')\n        throw new DOMException('NotSupportedError');\n\n      this._videoStreamTrack = videoStreamTrack;\n      if (!('readyState' in this._videoStreamTrack)) {\n        // Polyfill for Firefox\n        this._videoStreamTrack.readyState = 'live';\n      }\n\n      // MediaStream constructor not available until Chrome 55 - https://www.chromestatus.com/feature/5912172546752512\n      this._previewStream = new MediaStream([videoStreamTrack]);\n      this.videoElement = document.createElement('video');\n      this.videoElementPlaying = new Promise(resolve => {\n        this.videoElement.addEventListener('playing', resolve);\n      });\n      if (HTMLMediaElement) {\n        this.videoElement.srcObject = this._previewStream;  // Safari 11 doesn't allow use of createObjectURL for MediaStream\n      } else {\n        this.videoElement.src = URL.createObjectURL(this._previewStream);\n      }\n      this.videoElement.muted = true;\n      this.videoElement.setAttribute('playsinline', ''); // Required by Safari on iOS 11. See https://webkit.org/blog/6784\n      this.videoElement.play();\n\n      this.canvasElement = document.createElement('canvas');\n      // TODO Firefox has https://developer.mozilla.org/en-US/docs/Web/API/OffscreenCanvas\n      this.canvas2dContext = this.canvasElement.getContext('2d');\n    }\n\n    /**\n     * https://w3c.github.io/mediacapture-image/index.html#dom-imagecapture-videostreamtrack\n     * @return {MediaStreamTrack} The MediaStreamTrack passed into the constructor\n     */\n    get videoStreamTrack() {\n      return this._videoStreamTrack;\n    }\n\n    /**\n     * Implements https://www.w3.org/TR/image-capture/#dom-imagecapture-getphotocapabilities\n     * @return {Promise<PhotoCapabilities>} Fulfilled promise with\n     * [PhotoCapabilities](https://www.w3.org/TR/image-capture/#idl-def-photocapabilities)\n     * object on success, rejected promise on failure\n     */\n    getPhotoCapabilities() {\n      return new Promise(function executorGPC(resolve, reject) {\n        // TODO see https://github.com/w3c/mediacapture-image/issues/97\n        const MediaSettingsRange = {\n          current: 0, min: 0, max: 0,\n        };\n        resolve({\n          exposureCompensation: MediaSettingsRange,\n          exposureMode: 'none',\n          fillLightMode: ['none'],\n          focusMode: 'none',\n          imageHeight: MediaSettingsRange,\n          imageWidth: MediaSettingsRange,\n          iso: MediaSettingsRange,\n          redEyeReduction: false,\n          whiteBalanceMode: 'none',\n          zoom: MediaSettingsRange,\n        });\n        reject(new DOMException('OperationError'));\n      });\n    }\n\n    /**\n     * Implements https://www.w3.org/TR/image-capture/#dom-imagecapture-setoptions\n     * @param {Object} photoSettings - Photo settings dictionary, https://www.w3.org/TR/image-capture/#idl-def-photosettings\n     * @return {Promise<void>} Fulfilled promise on success, rejected promise on failure\n     */\n    setOptions(_photoSettings = {}) {\n      return new Promise(function executorSO(_resolve, _reject) {\n        // TODO\n      });\n    }\n\n    /**\n     * TODO\n     * Implements https://www.w3.org/TR/image-capture/#dom-imagecapture-takephoto\n     * @return {Promise<Blob>} Fulfilled promise with [Blob](https://www.w3.org/TR/FileAPI/#blob)\n     * argument on success; rejected promise on failure\n     */\n    takePhoto() {\n      const self = this;\n      return new Promise(function executorTP(resolve, reject) {\n        // `If the readyState of the MediaStreamTrack provided in the constructor is not live,\n        // return a promise rejected with a new DOMException whose name is \"InvalidStateError\".`\n        if (self._videoStreamTrack.readyState !== 'live') {\n          return reject(new DOMException('InvalidStateError'));\n        }\n        self.videoElementPlaying.then(() => {\n          try {\n            self.canvasElement.width = self.videoElement.videoWidth;\n            self.canvasElement.height = self.videoElement.videoHeight;\n            self.canvas2dContext.drawImage(self.videoElement, 0, 0);\n            self.canvasElement.toBlob(resolve);\n          } catch (error) {\n            reject(new DOMException('UnknownError'));\n          }\n        });\n      });\n    }\n\n    /**\n     * Implements https://www.w3.org/TR/image-capture/#dom-imagecapture-grabframe\n     * @return {Promise<ImageBitmap>} Fulfilled promise with\n     * [ImageBitmap](https://www.w3.org/TR/html51/webappapis.html#webappapis-images)\n     * argument on success; rejected promise on failure\n     */\n    grabFrame() {\n      const self = this;\n      return new Promise(function executorGF(resolve, reject) {\n        // `If the readyState of the MediaStreamTrack provided in the constructor is not live,\n        // return a promise rejected with a new DOMException whose name is \"InvalidStateError\".`\n        if (self._videoStreamTrack.readyState !== 'live') {\n          return reject(new DOMException('InvalidStateError'));\n        }\n        self.videoElementPlaying.then(() => {\n          try {\n            self.canvasElement.width = self.videoElement.videoWidth;\n            self.canvasElement.height = self.videoElement.videoHeight;\n            self.canvas2dContext.drawImage(self.videoElement, 0, 0);\n            // TODO polyfill https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmapFactories/createImageBitmap for IE\n            resolve(window.createImageBitmap(self.canvasElement));\n          } catch (error) {\n            reject(new DOMException('UnknownError'));\n          }\n        });\n      });\n    }\n  };\n}\n\nwindow.ImageCapture = ImageCapture;"]}